# SPDX-FileCopyrightText: 2022 Christoph Sax <c_sax@mailbox.org>
#
# SPDX-License-Identifier: MIT

# macOS runners are not available on GitLab free tier.

default:
  image: python:3.12
  cache:
    paths:
      - .pip-cache/

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

stages:
  - build
  - test
  - publish

build-npm-linux:
  stage: build
  image: node:lts
  # make a docker daemon available for tree-sitter-cli
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
  cache:
    paths:
      - node_modules/
  before_script:
    - npm --version
  script:
    - curl -sSL https://get.docker.com/ | sh
    - npm install tree-sitter-cli
    - npm run prebuildify --verbose
    - npm run build-wasm --verbose
  artifacts:
    paths:
      - tree-sitter-t32.wasm
      - prebuilds/
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual

build-npm-windows:
  stage: build
  image: mcr.microsoft.com/windows/servercore:1809
  before_script:
    - choco install nodejs-lts -y --allow-downgrade
    - node --version
    - npm --version
  script:
    - npm install
    - npm run install --verbose
    - npm run prebuildify --verbose
  artifacts:
    paths:
      - prebuilds/
  tags:
    - saas-windows-medium-amd64
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual

test-npm:
  stage: test
  image: node:lts
  needs:
    - job: build-npm-linux
    - job: build-npm-windows
  cache:
    paths:
      - node_modules/
  before_script:
    - node --version
    - npm --version
  script:
    - npm run install --verbose
    - npm run test-bindings-node --verbose
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual

publish-npm:
  stage: publish
  image: node:lts
  needs:
    - job: test-npm
  cache:
    paths:
      - node_modules/
  before_script:
    - node --version
    - npm --version
  script:
    - npm set "//registry.npmjs.org/:_authToken=$NPM_TOKEN"
    - npm publish --verbose
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual

build-linux:
  stage: build
  image: python:3.12
  # make a docker daemon available for cibuildwheel to use
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
  script:
    - curl -sSL https://get.docker.com/ | sh
    - python -m pip install cibuildwheel==3.0.1
    - cibuildwheel --output-dir wheelhouse
  artifacts:
    paths:
      - wheelhouse/
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual

build-windows:
  stage: build
  image: mcr.microsoft.com/windows/servercore:1809
  before_script:
    - choco install python -y --allow-downgrade --version 3.12.4
    - choco install git.install -y
    - py -m pip install cibuildwheel==3.0.1
  script:
    - py -m cibuildwheel --output-dir wheelhouse --platform windows
  artifacts:
    paths:
      - wheelhouse/
  tags:
    - saas-windows-medium-amd64
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual

build-sdist:
  stage: build
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install --upgrade setuptools[core]
    - pip install --upgrade build
  script:
    - python -m build --sdist
  artifacts:
    paths:
      - dist/
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual

publish-python:
  stage: publish
  needs:
    - job: build-linux
    - job: build-windows
    - job: build-sdist
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install --upgrade setuptools[core]
    - pip install --upgrade build twine
  script:
    - TWINE_PASSWORD=${PYPI_TOKEN} TWINE_USERNAME=__token__ python -m twine upload --verbose dist/* wheelhouse/*
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual

test-rust:
  stage: test
  image: rust:latest
  before_script:
    - cargo --version
  script:
    - cargo test --verbose
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual

publish-rust:
  stage: publish
  image: rust:latest
  needs:
    - job: test-rust
  before_script:
    - cargo --version
  script:
    - cargo publish --verbose --token ${CRATESIO_TOKEN}
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual
